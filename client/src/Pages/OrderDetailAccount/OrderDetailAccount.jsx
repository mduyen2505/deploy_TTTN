import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import axios from "axios";
import "./OrderDetaiAccount.css";
import AccountSidebar from "../../Components/AccountSidebar/AccountSidebar";
import Header from "../../Components/Header/Header";
import Footer from "../../Components/Footer/Footer";
import { getOrderDetails } from "../../config/ApiConfig"; // Import API

const OrderDetail = () => {
  const { orderId } = useParams();
  console.log("Order ID nh·∫≠n ƒë∆∞·ª£c:", orderId); // üîç Debug ki·ªÉm tra orderId

  const [order, setOrder] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchOrderDetail = async () => {
      try {
        const token = localStorage.getItem("token"); // L·∫•y token t·ª´ localStorage
        if (!token) {
          setError("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
          setLoading(false);
          return;
        }

        console.log("üîç Order ID:", orderId);
        console.log("üõ† G·ªçi API:", getOrderDetails(orderId));

        const response = await axios.get(getOrderDetails(orderId), {
          headers: { Authorization: `Bearer ${token}` }, // ‚úÖ Th√™m token v√†o headers
        });

        console.log("‚úÖ API response:", response.data);

        if (response.data.status === "OK") {
          setOrder(response.data.data);
        } else {
          setError("Kh√¥ng th·ªÉ t·∫£i chi ti·∫øt ƒë∆°n h√†ng.");
        }
      } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y chi ti·∫øt ƒë∆°n h√†ng:", error);
        setError("L·ªói k·∫øt n·ªëi ƒë·∫øn server.");
      } finally {
        setLoading(false);
      }
    };

    if (orderId) {
      fetchOrderDetail();
    } else {
      setError("Order ID kh√¥ng h·ª£p l·ªá.");
    }
  }, [orderId]);

  if (loading) return <p>ƒêang t·∫£i...</p>;
  if (error) return <p className="error-message">{error}</p>;
  if (!order) return <p>ƒê∆°n h√†ng kh√¥ng t·ªìn t·∫°i.</p>;
  return (
    <>
      <Header />
      <div className="account-container">
        <AccountSidebar />

        <div className="content">
          <h2 className="content-title">Chi Ti·∫øt ƒê∆°n H√†ng</h2>

          {/* Khung ch·ª©a 2 c·ªôt */}
          <div className="order-detail-wrapper">
            {/* C·ªôt th√¥ng tin kh√°ch h√†ng */}
            <div className="order-detail-info">
              <p>
                <strong>T√™n kh√°ch h√†ng:</strong> {order.name}
              </p>
              <p>
                <strong>Email:</strong> {order.email}
              </p>
              <p>
                <strong>S·ªë ƒëi·ªán tho·∫°i:</strong> {order.phone}
              </p>
              <p>
                <strong>ƒê·ªãa ch·ªâ giao h√†ng:</strong> {order.shippingAddress}
              </p>
            </div>

            {/* ƒê∆∞·ªùng line d·ªçc ngƒÉn gi·ªØa */}
            <div className="order-detail-divider"></div>

            {/* C·ªôt th√¥ng tin ƒë∆°n h√†ng */}
            <div className="order-detail-summary">
              <p>
                <strong>K·∫øt qu·∫£ thanh to√°n:</strong> {order.paymentResult}
              </p>
              <p>
                <strong>T·ªïng gi√° s·∫£n ph·∫©m:</strong>{" "}
                {order.totalPrice.toLocaleString()} ƒë
              </p>
              <p>
                <strong>Ph√≠ v·∫≠n chuy·ªÉn:</strong>{" "}
                {order.shippingFee.toLocaleString()} ƒë
              </p>
              <p>
                <strong>VAT: </strong>
                {order.VAT.toLocaleString()} ƒë
              </p>
            </div>
          </div>
          {/* Danh s√°ch s·∫£n ph·∫©m trong ƒë∆°n h√†ng */}
          <h3 className="order-products-title">Danh s√°ch s·∫£n ph·∫©m</h3>
          <div className="order-status-wrapper">
            <p>
              <strong>Tr·∫°ng th√°i:</strong>
              <span className={`order-status ${order.status.toLowerCase()}`}>
                {order.status}
              </span>
            </p>
          </div>

          {order.products.map((item, idx) => {
            const productImage = item.productId?.image
              ? item.productId.image.startsWith("http")
                ? item.productId.image
                : `http://localhost:3000/images/${item.productId.image}`
              : `http://localhost:3000/images/default-product.png`;

            return (
              <div key={idx} className="orderaccount-item">
                <img
                  src={productImage}
                  alt={item.productId?.name || "S·∫£n ph·∫©m"}
                  className="orderaccount-item-image"
                />
                <div className="orderaccount-item-details">
                  <h4 className="orderaccount-item-name">
                    {item.productId?.name || "S·∫£n ph·∫©m kh√¥ng x√°c ƒë·ªãnh"}
                  </h4>
                  <p className="orderaccount-item-quantity">
                    S·ªë l∆∞·ª£ng: {item.quantity}
                  </p>
                  <p className="orderaccount-item-price">
                    Gi√°:{" "}
                    {item.productId?.promotionPrice?.toLocaleString() || "0"} ƒë
                  </p>
                </div>
              </div>
            );
          })}

          {/* T·ªïng ti·ªÅn */}
          <div className="orderaccount-summary">
            <p className="order-total">
              T·ªïng thanh to√°n:{" "}
              <strong>{order.orderTotal.toLocaleString()} ƒë</strong>
            </p>
          </div>
        </div>
      </div>
      <Footer />
    </>
  );
};

export default OrderDetail;
